/** Performs division by 2, by shifting bits to the right.
  * Similar idea as with left-shift, this takes 32 NANDs but could've taken 0 gates
  * if we had the ability to connect pins directly.
  *
  */
CHIP ShiftRight{
     IN in[16];
     OUT out[16];

     PARTS:
     // The MSB(sign bit) stays as is, because this is an arithmetic shift
     Identity(in=in[15], out=out[15]);
     Identity(in=in[15], out=out[14]);
     Identity(in=in[14], out=out[13]);
     Identity(in=in[13], out=out[12]);
     Identity(in=in[12], out=out[11]);
     Identity(in=in[11], out=out[10]);
     Identity(in=in[10], out=out[09]);
     Identity(in=in[09], out=out[08]);
     Identity(in=in[08], out=out[07]);
     Identity(in=in[07], out=out[06]);
     Identity(in=in[06], out=out[05]);
     Identity(in=in[05], out=out[04]);
     Identity(in=in[04], out=out[03]);
     Identity(in=in[03], out=out[02]);
     Identity(in=in[02], out=out[01]);
     Identity(in=in[01], out=out[00]);

}
